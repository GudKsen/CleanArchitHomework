@model TasksViewModel

@{
    ViewData["Title"] = "Tasks list";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

  <div class="container">
  @*<h2>Modal Example</h2>*@
  <!-- Trigger the modal with a button -->
  

  <!-- Modal -->
  <div class="modal " id="myModal" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">Modal Header</h4>
        </div>
        <div class="j">
                    <button onclick="@("window.location.href='" + @Url.Action("CreateTask", "task") +  "'");">Create base task</button>
                    <button onclick="@("window.location.href='" + @Url.Action("CreateTask", "PracticeTask") +  "'");">Create practice task</button>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
      
    </div>
  </div>
  
</div>

<div class="all-tasks">
    <div class="header-tasks-collection">
        <h1>List of tasks</h1>
        <div id="mySidebar" class="sidebar">
            <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
            <a asp-action="Index" asp-route-sortState="@Model.Sort.NameSort" asp-route-name="@Model.Filter.SelectedTask">Name</a>
            <a asp-action="Index" asp-route-sortState="@Model.Sort.DeadlineSort" asp-route-name="@Model.Filter.SelectedTask">Deadline</a>
        </div>
        <div class="options">
            <div class="search">
                <form>
                    <div>
                        <input class="search-field" type="search" name="name" placeholder="Search..." value="@Model.Filter.SelectedTask" />
                    </div>

                    <div class="separator">
                        <button type="submit" class="select-search">Go!</button>
                    </div>
                </form>
                <button class="openbtn" onclick="openNav()">
                    <img src="~/images/icons/filter.png" />
                </button>
            </div>
        </div>
    </div>

    <div>
        <div class="tasks-container">
            @for (var index = 0; index < Model.Tasks.Count(); index++)
            {
                <div class="card-task"
                 onclick="@("window.location.href='" + @Url.Action("TaskInfo", "task") + "/" + Model.Tasks.ToList()[index].ID +  "'");">
                    <div class="card-task-content">
                        <div class="header-task">
                            <div class="title-task">
                                @Model.Tasks.ToList()[index].Name
                            </div>
                        </div>

                        <div class="body-task">
                            <div class="description-task">
                                @Model.Tasks.ToList()[index].Description
                            </div>
                            <div>
                                @Model.Tasks.ToList()[index].Deadline
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        
    </div>
    <div>
        @*<a class="nav-link" asp-area="" asp-controller="task" asp-action="CreateTask">Tasks</a>*@
        <button type="button" class="btn" data-toggle="modal" data-target="#myModal">
            <img class="add-user-img" src="~/images/icons/add-plus.png" />
        </button>
        
       @* <img class="add-user-img" src="~/images/icons/add-plus.png"
             onclick="@("window.location.href='" + @Url.Action("CreateTask", "task") +  "'");" />*@
    </div>
    <div class="pagination">
        @if (Model.Pagination.HasPreviousPage)
        {

            <a asp-action="Index" asp-controller="Home" 
           asp-route-page="@(Model.Pagination.PageNumber-1)"
           asp-route-name="@Model.Filter.SelectedTask"
           asp-route-sortstate="@Model.Sort.Current">
                <img class="prev-page-icon" src="~/images/icons/previous.png" />
            </a>

        }
        @if (Model.Pagination.HasNextPage)
        {

            <a asp-action="Index" asp-controller="Home"
           
           asp-route-page="@(Model.Pagination.PageNumber+1)"
           asp-route-name="@Model.Filter.SelectedTask"
           asp-route-sortstate="@Model.Sort.Current">
                <img class="next-page-icon" src="~/images/icons/arrow-right.png" />
            </a>

        }
    </div>
    
</div>