// <auto-generated />
using System;
using CleanArchitHomework.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitHomework.Infrastructure.Data.Migrations
{
    [DbContext(typeof(TaskDBContext))]
    [Migration("20230329121026_Migrations")]
    partial class Migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TaskClassID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskClassID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PractiseTaskID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PractiseTaskID");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaskClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrlResource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TaskClassID");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.TaskClass", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePublish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.PractiseTask", b =>
                {
                    b.HasBaseType("CleanArchitHomework.Domain.Models.TaskClass");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TasksPractice", (string)null);
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.Comment", b =>
                {
                    b.HasOne("CleanArchitHomework.Domain.Models.TaskClass", null)
                        .WithMany("Comments")
                        .HasForeignKey("TaskClassID");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.Equipment", b =>
                {
                    b.HasOne("CleanArchitHomework.Domain.Models.PractiseTask", null)
                        .WithMany("Equipments")
                        .HasForeignKey("PractiseTaskID");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.Resource", b =>
                {
                    b.HasOne("CleanArchitHomework.Domain.Models.TaskClass", null)
                        .WithMany("Resources")
                        .HasForeignKey("TaskClassID");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.PractiseTask", b =>
                {
                    b.HasOne("CleanArchitHomework.Domain.Models.TaskClass", null)
                        .WithOne()
                        .HasForeignKey("CleanArchitHomework.Domain.Models.PractiseTask", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.TaskClass", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Resources");
                });

            modelBuilder.Entity("CleanArchitHomework.Domain.Models.PractiseTask", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
